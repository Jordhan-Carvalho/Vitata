type Comment @model {
  id: ID!
  content: String
  owner: String!
  product: Product @connection(name: "ProductComments")
  createdAt: String
}

type Market
  @model
  @searchable
  @auth(
    rules: [
      {
        allow: groups
        groups: ["members"]
        operations: [create, update, delete]
      }
    ]
  ) {
  id: ID!
  name: String!
  banner: String!
  displayImage: String!
  products: [Product]
    @connection(name: "MarketProducts", sortField: "createdAt")
  description: String!
  category: String!
  owner: String!
  createdAt: String
}

type Product
  @model
  @searchable
  @auth(
    rules: [
      {
        allow: owner
        identityField: "sub"
        operations: [create, update, delete]
      }
    ]
  ) {
  id: ID!
  title: String!
  condition: String!
  description: String!
  district: String
  category: String!
  quantity: String!
  market: Market @connection(name: "MarketProducts")
  files: [S3Object]!
  price: Float!
  shipped: String!
  owner: String
  productList: ProductList @connection(name: "SortedProducts")
  comments: [Comment]
    @connection(name: "ProductComments", sortField: "createdAt")
  createdAt: String
}

# used to sort by date
type ProductList @model {
  id: ID!
  products: [Product]
    @connection(name: "SortedProducts", sortField: "createdAt")
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type User
  @model(
    queries: { get: "getUser" }
    mutations: { create: "registerUser", update: "updateUser" }
    subscriptions: null
  ) {
  id: ID!
  username: String!
  email: String!
  phone: String!
  registered: Boolean
  orders: [Order] @connection(name: "UserOrder", sortField: "createdAt")
}

type Order
  @model(
    queries: null
    mutations: { create: "createOrder" }
    subscriptions: null
  ) {
  id: ID!
  product: Product @connection
  user: User @connection(name: "UserOrder")
  shippingAddress: ShippingAddress
  createdAt: String
}

type ShippingAddress {
  district: String!
  street: String!
  more_info: String!
  number: String!
}
